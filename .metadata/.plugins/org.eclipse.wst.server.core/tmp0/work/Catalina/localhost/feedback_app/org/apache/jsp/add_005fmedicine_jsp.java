/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-08-07 16:27:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class add_005fmedicine_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Add New Medicine</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./CSS/forAddMed.css\">\r\n");
      out.write("   \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

    boolean inserted = false;
    boolean error = false;

    if ("POST".equalsIgnoreCase(request.getMethod())) {
        String name = request.getParameter("name");
        String company = request.getParameter("company");
        String priceStr = request.getParameter("price");
        String quantityStr = request.getParameter("quantity");
        String expiry = request.getParameter("expiry");

        try {
            double price = Double.parseDouble(priceStr);
            int quantity = Integer.parseInt(quantityStr);

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/med2025", "root", "root@123"
            );

            String sql = "INSERT INTO medicine (name, company, price, quantity, expiry) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, company);
            stmt.setDouble(3, price);
            stmt.setInt(4, quantity);
            stmt.setDate(5, java.sql.Date.valueOf(expiry));

            int rows = stmt.executeUpdate();

            if (rows > 0) inserted = true;

            stmt.close();
            conn.close();
        } catch (Exception e) {
            error = true;
        }
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <h2>Add New Medicine</h2>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (inserted) { 
      out.write("\r\n");
      out.write("        <div class=\"success-box\">\r\n");
      out.write("            ✅ Medicine added successfully!\r\n");
      out.write("        </div>\r\n");
      out.write("        <form action=\"add_medicine.jsp\" method=\"get\">\r\n");
      out.write("            <button type=\"submit\">➕ Add More Medicine</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <a class=\"back\" href=\"dashboard.jsp\">← Back to Dashboard</a>\r\n");
      out.write("    ");
 } else if (error) { 
      out.write("\r\n");
      out.write("        <div class=\"error-box\">\r\n");
      out.write("            ❌ Error occurred while adding medicine. Please try again.\r\n");
      out.write("        </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
 if (!inserted) { 
      out.write("\r\n");
      out.write("        <form action=\"add_medicine.jsp\" method=\"post\">\r\n");
      out.write("            <label for=\"name\">Medicine Name:</label>\r\n");
      out.write("            <input type=\"text\" name=\"name\" id=\"name\" required>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"company\">Company:</label>\r\n");
      out.write("            <input type=\"text\" name=\"company\" id=\"company\" required>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"price\">Price (₹):</label>\r\n");
      out.write("            <input type=\"number\" name=\"price\" id=\"price\" step=\"0.01\" required>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"quantity\">Quantity:</label>\r\n");
      out.write("            <input type=\"number\" name=\"quantity\" id=\"quantity\" required>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"expiry\">Expiry Date:</label>\r\n");
      out.write("            <input type=\"date\" name=\"expiry\" id=\"expiry\" required>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"submit\">Add Medicine</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <a class=\"back\" href=\"dashboard.jsp\">← Back to Dashboard</a>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
